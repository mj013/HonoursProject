@model ProgressTracker.Models.RegisterStudentViewModel

@{
    ViewBag.Title = "RegisterStudent";
}

<h2>Register as a Student</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                List<SelectListItem> listItem = new List<SelectListItem>();
                listItem.Add(new SelectListItem
                {
                    Text = "Miss",
                    Value = "Miss",
                    Selected = true
                });
                listItem.Add(new SelectListItem
                {
                    Text = "Mr",
                    Value = "Mr",

                });
                listItem.Add(new SelectListItem
                {
                    Text = "Mrs",
                    Value = "Mrs"
                });
                listItem.Add(new SelectListItem
                {
                    Text = "Prof",
                    Value = "Prof"
                });
                listItem.Add(new SelectListItem
                {
                    Text = "Ms",
                    Value = "Ms"
                });
            }

            @Html.DropDownListFor(model => model.Title, listItem, "-- Select Title --")
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProjectName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProjectName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProjectName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Course, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Course, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Course, "", new { @class = "text-danger" })
        </div>
    </div>

  

    <div class="form-group">
        @Html.LabelFor(model => model.StudyYear, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                List<SelectListItem> listItem2 = new List<SelectListItem>();
                listItem2.Add(new SelectListItem
                {
                    Text = "Honours",
                    Value = "Honours",
                    //Selected = true
                });
                listItem2.Add(new SelectListItem
                {
                    Text = "Masters",
                    Value = "Masters",

                });
                listItem2.Add(new SelectListItem
                {
                    Text = "PhD",
                    Value = "PhD"
                });
              
            }

            @Html.DropDownListFor(model => model.StudyYear, listItem2, "-- Select StudyYear --")
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Picture, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="Picture" accept="image/*" />
            @Html.ValidationMessageFor(model => model.Picture, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Register" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
